// <auto-generated />
using System;
using BattleCompanies.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BattleCompanies.Migrations
{
    [DbContext(typeof(BattleCompanyContext))]
    [Migration("20200612014316_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BattleCompanies.Models.BaseClass", b =>
                {
                    b.Property<int>("BaseClassID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssociatedFactionFactionID")
                        .HasColumnType("int");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BaseClassID");

                    b.HasIndex("AssociatedFactionFactionID");

                    b.ToTable("BaseClasses");
                });

            modelBuilder.Entity("BattleCompanies.Models.Campaign", b =>
                {
                    b.Property<int>("CampaignID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("CampaignID");

                    b.HasIndex("UserID");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("BattleCompanies.Models.Company", b =>
                {
                    b.Property<int>("CompanyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompCampaignCampaignID")
                        .HasColumnType("int");

                    b.Property<int?>("CompFactionFactionID")
                        .HasColumnType("int");

                    b.Property<int?>("CompUserUserID")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyID");

                    b.HasIndex("CompCampaignCampaignID");

                    b.HasIndex("CompFactionFactionID");

                    b.HasIndex("CompUserUserID");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("BattleCompanies.Models.Faction", b =>
                {
                    b.Property<int>("FactionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FactionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FactionID");

                    b.ToTable("Factions");
                });

            modelBuilder.Entity("BattleCompanies.Models.FactionWargear", b =>
                {
                    b.Property<int>("FactionID")
                        .HasColumnType("int");

                    b.Property<int>("WargearID")
                        .HasColumnType("int");

                    b.HasKey("FactionID", "WargearID");

                    b.HasIndex("WargearID");

                    b.ToTable("FactionWargear");
                });

            modelBuilder.Entity("BattleCompanies.Models.Keyword", b =>
                {
                    b.Property<int>("KeywordID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KeywordText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KeywordID");

                    b.ToTable("Keywords");
                });

            modelBuilder.Entity("BattleCompanies.Models.Soldier", b =>
                {
                    b.Property<int>("SoldierID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("Attacks")
                        .HasColumnType("tinyint");

                    b.Property<int?>("CompanyID")
                        .HasColumnType("int");

                    b.Property<byte>("Courage")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Defense")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Experience")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Fate")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Fight")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Might")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Movement")
                        .HasColumnType("tinyint");

                    b.Property<short>("PointCost")
                        .HasColumnType("smallint");

                    b.Property<byte>("Shoot")
                        .HasColumnType("tinyint");

                    b.Property<int?>("SoldierClassBaseClassID")
                        .HasColumnType("int");

                    b.Property<string>("SoldierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Strength")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Will")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Wounds")
                        .HasColumnType("tinyint");

                    b.HasKey("SoldierID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("SoldierClassBaseClassID");

                    b.ToTable("Soldiers");
                });

            modelBuilder.Entity("BattleCompanies.Models.SoldierKeywords", b =>
                {
                    b.Property<int>("KeywordID")
                        .HasColumnType("int");

                    b.Property<int>("SoldierID")
                        .HasColumnType("int");

                    b.HasKey("KeywordID", "SoldierID");

                    b.HasIndex("SoldierID");

                    b.ToTable("SoldierKeywords");
                });

            modelBuilder.Entity("BattleCompanies.Models.SoldierWargear", b =>
                {
                    b.Property<int>("WargearID")
                        .HasColumnType("int");

                    b.Property<int>("SoldierID")
                        .HasColumnType("int");

                    b.HasKey("WargearID", "SoldierID");

                    b.HasIndex("SoldierID");

                    b.ToTable("SoldierWargear");
                });

            modelBuilder.Entity("BattleCompanies.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BattleCompanies.Models.Wargear", b =>
                {
                    b.Property<int>("WargearID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("WargearID");

                    b.ToTable("Wargears");
                });

            modelBuilder.Entity("BattleCompanies.Models.BaseClass", b =>
                {
                    b.HasOne("BattleCompanies.Models.Faction", "AssociatedFaction")
                        .WithMany()
                        .HasForeignKey("AssociatedFactionFactionID");
                });

            modelBuilder.Entity("BattleCompanies.Models.Campaign", b =>
                {
                    b.HasOne("BattleCompanies.Models.User", null)
                        .WithMany("Campaigns")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("BattleCompanies.Models.Company", b =>
                {
                    b.HasOne("BattleCompanies.Models.Campaign", "CompCampaign")
                        .WithMany("Companies")
                        .HasForeignKey("CompCampaignCampaignID");

                    b.HasOne("BattleCompanies.Models.Faction", "CompFaction")
                        .WithMany()
                        .HasForeignKey("CompFactionFactionID");

                    b.HasOne("BattleCompanies.Models.User", "CompUser")
                        .WithMany()
                        .HasForeignKey("CompUserUserID");
                });

            modelBuilder.Entity("BattleCompanies.Models.FactionWargear", b =>
                {
                    b.HasOne("BattleCompanies.Models.Faction", "Faction")
                        .WithMany("FactionWargears")
                        .HasForeignKey("FactionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BattleCompanies.Models.Wargear", "Wargear")
                        .WithMany("FactionWargears")
                        .HasForeignKey("WargearID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BattleCompanies.Models.Soldier", b =>
                {
                    b.HasOne("BattleCompanies.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID");

                    b.HasOne("BattleCompanies.Models.BaseClass", "SoldierClass")
                        .WithMany()
                        .HasForeignKey("SoldierClassBaseClassID");
                });

            modelBuilder.Entity("BattleCompanies.Models.SoldierKeywords", b =>
                {
                    b.HasOne("BattleCompanies.Models.Keyword", "Keyword")
                        .WithMany("SoldierKeywords")
                        .HasForeignKey("KeywordID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BattleCompanies.Models.Soldier", "Soldier")
                        .WithMany("SoldierKeywords")
                        .HasForeignKey("SoldierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BattleCompanies.Models.SoldierWargear", b =>
                {
                    b.HasOne("BattleCompanies.Models.Soldier", "Soldier")
                        .WithMany("SoldierWargears")
                        .HasForeignKey("SoldierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BattleCompanies.Models.Wargear", "Wargear")
                        .WithMany("SoldierWargears")
                        .HasForeignKey("WargearID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
